{"version":3,"sources":["toolbox.js","App.js","serviceWorker.js","index.js"],"names":["GeneratePaperList","selectQuestionRange","png","pia","luo","FinalList","SOR","lis","push","includes","index","hasOwnProperty","Type","Question","Answer","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","App","props","state","word","pron","pingjia","animClass","nextQuesAndRender","bind","previousQuesAndRender","showAnswer","changeQuestionRange","renewPage","current_question_index","paperList","this","renderCurrentQuestion","current_problem","answer","setState","updater","t","d","his_qm_pos","setTimeout","selected_range","className","id","options","label","value","selected","onSelectedChanged","overrideStrings","selectSomeItems","allItemsAreSelected","selectAll","disableSearch","src","alt","onClick","type","disabled","onReleased","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb187958.chunk.js","sourcesContent":["import SOR from \"./nihongjin.json\"\r\n\r\nfunction shuffle(array) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\n/**\r\n *\r\n * @param selectQuestionRange [\"pngl\",\"lpng\",\"pial\",\"lpia\"]\r\n * @constructor\r\n * @return []{Type:\"pngl\",Question:\"あ\",Answer:\"a\"}\r\n */\r\nexport function GeneratePaperList(selectQuestionRange) {\r\n    let png = [];\r\n    let pia = [];\r\n    let luo = [];\r\n    let FinalList = [];\r\n    for(let lis of SOR){\r\n        png.push(lis[1]);\r\n        pia.push(lis[2]);\r\n        luo.push(lis[0]);\r\n    }\r\n    if (selectQuestionRange.includes(\"pngl\")){\r\n        for(let index in png){\r\n            if(png.hasOwnProperty(index)){\r\n                FinalList.push({Type: \"pngl\",Question:png[index],Answer:luo[index]})\r\n            }\r\n        }\r\n    }    if (selectQuestionRange.includes(\"lpng\")){\r\n        for(let index in luo){\r\n            if(luo.hasOwnProperty(index)){\r\n                FinalList.push({Type: \"lpng\",Question:luo[index],Answer:png[index]})\r\n            }\r\n        }\r\n    }    if (selectQuestionRange.includes(\"pial\")){\r\n        for(let index in pia){\r\n            if(pia.hasOwnProperty(index)){\r\n                FinalList.push({Type: \"pial\",Question:pia[index],Answer:luo[index]})\r\n            }\r\n        }\r\n    }    if (selectQuestionRange.includes(\"lpia\")){\r\n        for(let index in luo){\r\n            if(luo.hasOwnProperty(index)){\r\n                FinalList.push({Type: \"lpia\",Question:luo[index],Answer:pia[index]})\r\n            }\r\n        }\r\n    }\r\n    shuffle(FinalList);\r\n    return FinalList\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport './AppAnime.css';\nimport {AwesomeButton} from \"react-awesome-button\";\nimport \"react-awesome-button/dist/styles.css\";\nimport {GeneratePaperList} from \"./toolbox\"\nimport MultiSelect from \"@khanacademy/react-multi-select\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            word: \"?\",\n            pron: \"?\",\n            pingjia: true,\n            selectQuestionRange: [\"pngl\", \"lpng\", \"pial\", \"lpia\"],\n            animClass: {word: \"stable\", pron: \"stable\"}\n        };\n        this.nextQuesAndRender = this.nextQuesAndRender.bind(this);\n        this.previousQuesAndRender = this.previousQuesAndRender.bind(this);\n        this.showAnswer = this.showAnswer.bind(this);\n        this.changeQuestionRange = this.changeQuestionRange.bind(this);\n        this.renewPage = this.renewPage.bind(this);\n        this.current_question_index = 0;\n        this.paperList = GeneratePaperList(this.state.selectQuestionRange)\n    }\n\n    renewPage() {\n        this.current_question_index = 0;\n        this.paperList = GeneratePaperList(this.state.selectQuestionRange);\n        this.renderCurrentQuestion();\n    }\n\n    componentDidMount() {\n        this.renderCurrentQuestion();\n    }\n\n    renderCurrentQuestion() {\n        let current_problem = this.paperList[this.current_question_index];\n        this.answer = current_problem.Answer;\n        if (current_problem.Type === \"pngl\" || current_problem.Type === \"pial\") {\n            this.setState({word: current_problem.Question, pron: \"?\"})\n        } else {\n            this.setState({word: \"?\", pron: current_problem.Question})\n        }\n        if (current_problem.Type === \"pngl\" || current_problem.Type === \"lpng\") {\n            this.setState({pingjia: true})\n        } else {\n            this.setState({pingjia: false})\n        }\n    }\n\n    showAnswer() {\n        if (this.state.word === \"?\") {\n            this.setState({word: this.answer})\n        } else if (this.state.pron === \"?\") {\n            this.setState({pron: this.answer})\n        }\n    }\n\n    // 加入动画效果\n    nextQuesAndRender() {\n        // 判断哪个元素需要运动\n        let updater = {word: \"next\", pron: \"next\"};\n        if (this.state.word === \"?\" || this.state.pron === \"?\") {\n            // 没有显示答案\n            let t = this.paperList[this.current_question_index].Type;\n            this.current_question_index = this.current_question_index + 1;\n            let d = this.paperList[this.current_question_index].Type;\n            let his_qm_pos = t === \"pngl\" || t === \"pial\"; // pron是?\n            let fur_qm_pos = d === \"pngl\" || d === \"pial\";\n            if (his_qm_pos === fur_qm_pos) {\n                // 两次问号出现的位置相同 均是true，只更新word，均是false，只更新pron\n                updater = {word: his_qm_pos ? \"next\" : \"stable\", pron: !his_qm_pos ? \"next\" : \"stable\"}\n            }\n        } else {\n            this.current_question_index = this.current_question_index + 1;\n        }\n        this.setState({animClass: updater});\n        setTimeout(function () {\n            this.renderCurrentQuestion();\n        }.bind(this), 250);\n        setTimeout(function () {\n            this.setState({animClass: {word: \"stable\", pron: \"stable\"}})\n        }.bind(this), 500)\n    }\n\n    previousQuesAndRender() {\n        let updater = {word: \"prev\", pron: \"prev\"};\n        // 判断哪个元素需要运动\n        if (this.state.word === \"?\" || this.state.pron === \"?\") {\n            let t = this.paperList[this.current_question_index].Type;\n            this.current_question_index = this.current_question_index - 1;\n            let d = this.paperList[this.current_question_index].Type;\n            let his_qm_pos = t === \"pngl\" || t === \"pial\"; // pron是?\n            let fur_qm_pos = d === \"pngl\" || d === \"pial\";\n            if (his_qm_pos === fur_qm_pos) {\n                // 两次问号出现的位置相同 均是true，只更新word，均是false，只更新pron\n                updater = {word: his_qm_pos ? \"prev\" : \"stable\", pron: !his_qm_pos ? \"prev\" : \"stable\"}\n            }\n        } else {\n            this.current_question_index = this.current_question_index + 1;\n        }\n        this.setState({animClass: updater});\n        setTimeout(function () {\n            this.renderCurrentQuestion();\n        }.bind(this), 250);\n        setTimeout(function () {\n            this.setState({animClass: {word: \"stable\", pron: \"stable\"}})\n        }.bind(this), 500)\n    }\n\n    changeQuestionRange(selected_range) {\n        if (selected_range.length > 0) {\n            this.answer = \"\";\n            this.current_question_index = 0;\n            this.setState({word: \"\", pron: \"\"});\n            this.setState({selectQuestionRange: selected_range}, () => {\n                this.paperList = GeneratePaperList(this.state.selectQuestionRange);\n                this.renderCurrentQuestion();\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div id={'head'}>\n                    日语练习\n                    <MultiSelect\n                        options={[\n                            {label: \"平假名-罗马音\", value: \"pngl\"},\n                            {label: \"罗马音-平假名\", value: \"lpng\"},\n                            {label: \"片假名-罗马音\", value: \"pial\"},\n                            {label: \"罗马音-片假名\", value: \"lpia\"}\n                        ]}\n                        selected={this.state.selectQuestionRange}\n                        onSelectedChanged={this.changeQuestionRange}\n                        overrideStrings={{\n                            selectSomeItems: \"请至少选择一个练习项目\",\n                            allItemsAreSelected: \"已经选择全部练习项目\",\n                            selectAll: \"选择全部\"\n                        }}\n                        disableSearch={true}\n                    />\n                    <img src={'./reload.svg'} alt={'good'} className={'reload'} onClick={this.renewPage}/>\n                </div>\n\n                <div id={'card'}>\n                    <div onClick={this.showAnswer}>\n                        <div id={\"linter\"}>{this.state.pingjia ? \"平假名\" : \"片假名\"}</div>\n                        <div id={'progress'}>\n                            {this.current_question_index + 1} / {this.paperList.length}\n                        </div>\n                        <div id={'pron'} className={this.state.animClass.pron}>\n                            {this.state.pron}\n                        </div>\n                        <div id={'word'} className={this.state.animClass.word}>\n                            {this.state.word}\n                        </div>\n                    </div>\n                    <AwesomeButton type=\"primary\" className={'btnner'} id={'prev'}\n                                   disabled={this.current_question_index === 0}\n                                   onReleased={this.previousQuesAndRender}>上一个</AwesomeButton>\n                    <AwesomeButton type=\"primary\" className={'btnner'} id={'next'}\n                                   disabled={this.current_question_index === this.paperList.length - 1}\n                                   onReleased={this.nextQuesAndRender}>下一个</AwesomeButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}